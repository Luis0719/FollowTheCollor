<h1>{{playername}}</h1>
<h2>Round #<span id="round-span">1</span></h2>

<table>
    <tr>
        <td>
            <section class="game-container">
                <div class="color-box color-box-red">
                    <button class="background js-add-colorbox" data-color='red'></button>
                </div>
                <div class="color-box color-box-blue">
                    <button class="background js-add-colorbox" data-color='blue'></button>
                </div>
                <div class="color-box color-box-yellow">
                    <button class="background js-add-colorbox" data-color='yellow'></button>
                </div>
                <div class="color-box color-box-green">
                    <button class="background js-add-colorbox" data-color='green'></button>
                </div>
            </section>
        </td>

        <td>
            <h3>Current color sequence:</h3>
            <section id="sequence-container" class="samples"></section>
        </td>
    </tr>
</table>



<div id="youre-player-box" class="message-box">
    <div class="content">
        You are a player!
    </div>
</div>

<div id="waiting-leader-box" class="message-box">
    <div class="content">
        Please wait. The leader is choosing a color
    </div>
</div>

<div id="well-done-box" class="message-box">
    <div class="content">
        Well done! Turn finished
    </div>
</div>

<div id="you-lost-box" class="message-box">
    <div class="content">
        Wrong choise. You lost
    </div>
</div>

<div id="leader-disconnected-box" class="message-box">
    <div class="content">
        <div>The leader has disconnected. Wait until a new leader is chosed</div>
        <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    var socket = io();
    var choice_number;
    var current_color;
    socket.emit('usr-register', "{{playername}}");

    $('#youre-player-box').fadeIn();
    setTimeout($('#youre-player-box').hide(), 2000);
    $('#waiting-leader-box').show();

    $('.js-add-colorbox').click(function(e){
        e.preventDefault(); // prevents page reloading                
        current_color = $(this).attr('data-color');     

        send_choice();
        return false;
    });

    function send_choice(){
        // convert to binary
        let choice_number_b = choice_number.toString(2);

        // Give a small change of failure
        let should_fail = Math.random() >= 0.5;
        let ones_occurences = choice_number_b.match(/1/g) || 0;

        // Add parity bit. Using odd parity algorithm
        console.log(`Choice number b = ${choice_number_b}`);
        if (ones_occurences.length % 2 == 0 || should_fail){
            choice_number_b = "1" + choice_number_b;
        }else{
            choice_number_b = "0" + choice_number_b;
        }
        console.log(`Result choice number b = ${choice_number_b}`)

        socket.emit('usr-choice', current_color, choice_number_b);
    }

    function clean_sequence(){
        $('#sequence-container').empty();
    }
</script>

<script>
    socket.on('usr-finished-turn', function(){
        $('#well-done-box').fadeIn();
        setTimeout(function() { $('#well-done-box').hide(); }, 2000);
        $('#waiting-leader-box').show();
    });

    socket.on('usr-wrong-choice', function(){
        $('#you-lost-box').fadeIn();
    });

    socket.on('usr-start-turn', function(round, newcolor){
        alert(`Leader selected ${newcolor}`);
        choice_number = 0;
        $('#round-span').text(round);
        $('#waiting-leader-box').hide();
        console.log(`Starting round #${round}`);
        clean_sequence();
    });
  
    socket.on('usr-leader-disconnected', function(){
        $('#leader-disconnected-box').fadeIn();
    });

    socket.on('usr-leader-chosed', function(leader_name){
        $('#leader-disconnected-box').hide();
        alert(`${leader_name} was chosed as the new leader. A new game will be started`);
    });

    socket.on('usr-resend-choice', function(){
        console.log('Choiced denied. Resending choice');
        send_choice();
    });

    socket.on('usr-choice-accepted', function(){
        console.log('Choice accepted');
        choice_number++;

        let container = document.getElementById("sequence-container");
        let color_box = document.createElement("div");
        color_box.className = `color-sample ${current_color}-box`;
        container.appendChild(color_box);   
    });


    socket.on('redirect', function(destination) {
        window.location.href = destination;
    });
</script>